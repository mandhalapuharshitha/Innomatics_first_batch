<html>
<head>
  <title>Todo List App</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: LightYellow;
    }
    .container {
      max-width: 600px;
      margin: 40px auto;
      padding: 20px;
      background-color: PaleGreen;
      border: 1px solid MediumTurquoise;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    .todo-item {
      padding: 10px;
      border-bottom: 1px solid LightCoral;
      background-color: LightYellow;
    }
    .todo-item:last-child {
      border-bottom: none;
    }
    .completed {
      text-decoration: line-through;
      color: DarkGray;
    }
    #add-todo-btn {
      background-color: Teal;
      border: none;
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
      color: White;
    }
    #edit-todo-btn {
      background-color: LimeGreen;
      border: none;
      padding: 5px 10px;
      font-size: 14px;
      cursor: pointer;
      color: White;
    }
    #delete-todo-btn {
      background-color: Crimson;
      border: none;
      padding: 5px 10px;
      font-size: 14px;
      cursor: pointer;
      color: White;
    }
    .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0,0,0,0.4);
    }
    .modal-content {
      background-color: LightGray;
      margin: 15% auto;
      padding: 20px;
      border: 1px solid DarkGray;
      width: 80%;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    .modal-header {
      background-color: DarkPurple;
      color: White;
      padding: 10px;
      border-bottom: 1px solid LightGray;
    }
    .modal-body {
      padding: 20px;
    }
    .modal-footer {
      background-color: LightGray;
      padding: 10px;
      border-top: 1px solid LightGray;
    }
    .btn-primary {
      background-color: Navy;
      border: none;
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
      color: White;
    }
    .btn-success {
      background-color: ForestGreen;
      border: none;
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
      color: White;
    }
    .btn-danger {
      background-color: Crimson;
      border: none;
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
      color: White;
    }
    .btn-warning {
      background-color: Orange;
      border: none;
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
      color: White;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1 style="color: DarkPurple;">Todo List App</h1>
    <form id="add-todo-form">
      <input type="text" id="todo-input" placeholder="Add new task" style="background-color: LightGray; border: 1px solid DarkGray; padding: 5px; border-radius: 5px; width: 100%;">
      <button type="submit" id="add-todo-btn" class="btn btn-primary">Add</button>
    </form>
    <div id="root"></div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/react@18.2.0/umd/react.development.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/react-dom@18.2.0/umd/react-dom.development.js"></script>
  <script>
    const { useState } = React;

    function TodoItem({ todo, index, completeTodo, removeTodo, editTodo }) {
      return (
        <li className="todo-item list-group-item" style={{backgroundColor: "LightYellow", borderRadius: "5px", marginBottom: "5px", padding: "10px", border: "1px solid LightCoral"}}>
          <span style={{ textDecoration: todo.isCompleted ? 'line-through' : 'none', color: todo.isCompleted ? 'DarkGray' : 'Black' }}>{todo.text}</span>
          <div className="float-end">
            <button onClick={() => completeTodo(index)} className="btn btn-success" style={{backgroundColor: "ForestGreen", border: "none", padding: "5px 10px", fontSize: "14px", cursor: "pointer", color: "White"}}>{todo.isCompleted ? 'Undo' : 'Complete'}</button>
            <button onClick={() => editTodo(index)} id="edit-todo-btn" className="btn btn-warning" style={{backgroundColor: "Orange", border: "none", padding: "5px 10px", fontSize: "14px", cursor: "pointer", color: "White"}}>Edit</button>
            <button onClick={() => removeTodo(index)} id="delete-todo-btn" className="btn btn-danger" style={{backgroundColor: "Crimson", border: "none", padding: "5px 10px", fontSize: "14px", cursor: "pointer", color: "White"}}>Delete</button>
          </div>
        </li>
      );
    }

    function TodoApp() {
      const [todos, setTodos] = useState([]);
      const [newTodo, setNewTodo] = useState('');
      const [editingTodo, setEditingTodo] = useState(null);
      const [modalOpen, setModalOpen] = useState(false);

      const addTodo = () => {
        if (newTodo.trim() !== '') {
          setTodos([...todos, { text: newTodo, isCompleted: false }]);
          setNewTodo('');
        }
      };

      const completeTodo = (index) => {
        const newTodos = [...todos];
        newTodos[index].isCompleted = !newTodos[index].isCompleted;
        setTodos(newTodos);
      };

      const removeTodo = (index) => {
        const newTodos = [...todos];
        newTodos.splice(index, 1);
        setTodos(newTodos);
      };

      const editTodo = (index) => {
        setEditingTodo(index);
        setModalOpen(true);
      };

      const saveEdit = () => {
        if (editingTodo !== null) {
          const newTodos = [...todos];
          newTodos[editingTodo].text = newTodo;
          setTodos(newTodos);
          setEditingTodo(null);
          setNewTodo('');
          setModalOpen(false);
        }
      };

      return (
        <div style={{padding: "20px", backgroundColor: "PaleGreen", borderRadius: "10px", boxShadow: "0 0 10px rgba(0,0,0,0.1)"}}>
          <form onSubmit={(e) => {
            e.preventDefault();
            addTodo();
          }}>
            <input type="text" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} style={{backgroundColor: "LightGray", border: "1px solid DarkGray", padding: "5px", borderRadius: "5px", width: "100%"}}/>
            <button type="submit" id="add-todo-btn" className="btn btn-primary">Add</button>
          </form>
          <ul id="todo-list" className="list-group" style={{padding: "0", margin: "0", listStyle: "none"}}>
            {todos.map((todo, index) => (
              <TodoItem key={index} todo={todo} index={index} completeTodo={completeTodo} removeTodo={removeTodo} editTodo={editTodo} />
            ))}
          </ul>
          {modalOpen && (
            <div className="modal">
              <div className="modal-content" style={{backgroundColor: "LightGray", margin: "15% auto", padding: "20px", border: "1px solid DarkGray", width: "80%"}}>
                <div className="modal-header">
                  <h5 className="modal-title">Edit Todo</h5>
                </div>
                <div className="modal-body">
                  <form onSubmit={(e) => {
                    e.preventDefault();
                    saveEdit();
                  }}>
                    <input type="text" value={editingTodo !== null ? todos[editingTodo].text : ''} onChange={(e) => setNewTodo(e.target.value)} style={{backgroundColor: "LightGray", border: "1px solid DarkGray", padding: "5px", borderRadius: "5px", width: "100%"}}/>
                    <button type="submit" id="add-todo-btn" className="btn btn-success">Save</button>
                    <button type="button" onClick={() => setModalOpen(false)} id="delete-todo-btn" className="btn btn-danger">Cancel</button>
                  </form>
                </div>
                <div className="modal-footer">
                  <button type="button" onClick={() => setModalOpen(false)} id="delete-todo-btn" className="btn btn-danger">Close</button>
                </div>
              </div>
            </div>
          )}
        </div>
      );
    }

    const root = ReactDOM.createRoot(document.getElementById('root'));
    root.render(<TodoApp />);
  </script>
</body>
</html>